groups:
- name: Pivotal Ops Manager
  jobs:
  - deploy-pivotal-ops-manager-ova
  - config-pivotal-ops-manager-auth
- name: Pivotal Ops BOSH Director
  jobs:
  - config-pivotal-ops-bosh-director
  - apply-changes-pivotal-ops-bosh-director  
- name: pivotal Container Service & Harbor
  jobs:
  - upload-config-pivotal-container-service
  - upload-config-harbor
  - deploy-pks-&-harbor-tiles
  - set-dns
  - sync-images
  - sync-postgresql-helm-chart
  - sync-concourse-helm-chart
  - sync-traefik-helm-chart
  - sync-kafka-helm-chart
  - sync-cassandra-helm-chart
  - sync-postgresql-zookeeper-chart
  - create-pks-admin-user
- name: Control Kubernetes Cluster
  jobs:
  - deploy-k8s-cluster
  - bootstrap-cluster
  
resources:
- name: pivotal-ops-manager
  type: s3
  source:
    regexp: (.*).ova
    endpoint: {{minio_s3_endpoint}}
    bucket: pivotal-ops-manager
    disable_ssl: true
- name: pivotal-container-service
  type: s3
  source:
    regexp: (.*)1.2.4-build.6.pivotal
    endpoint: {{minio_s3_endpoint}}
    bucket: pivotal-container-service
    disable_ssl: true
- name: harbor
  type: s3
  source:
    regexp: (.*).pivotal
    endpoint: {{minio_s3_endpoint}}
    bucket: harbor-container-registry
    disable_ssl: true
- name: xenial-97.39
  type: s3
  source:
    regexp: (.*)97.39-vsphere-esxi-ubuntu-xenial-go_agent.tgz
    endpoint: {{minio_s3_endpoint}}
    bucket: xenial-stemcells
    disable_ssl: true
- name: postgresql-helm-chart
  type: s3
  source:
    regexp: postgresql.*\.(tgz$)|(tar\.gz$)
    endpoint: {{minio_s3_endpoint}}
    bucket: charts
    disable_ssl: true
- name: zookeeper-helm-chart
  type: s3
  source:
    regexp: zookeeper.*\.(tgz$)|(tar\.gz$)
    endpoint: {{minio_s3_endpoint}}
    bucket: charts
    disable_ssl: true
- name: cassandra-helm-chart
  type: s3
  source:
    regexp: cassandra.*\.(tgz$)|(tar\.gz$)
    endpoint: {{minio_s3_endpoint}}
    bucket: charts
    disable_ssl: true
- name: kafka-helm-chart
  type: s3
  source:
    regexp: kafka.*\.(tgz$)|(tar\.gz$)
    endpoint: {{minio_s3_endpoint}}
    bucket: charts
    disable_ssl: true
- name: concourse-helm-chart
  type: s3
  source:
    regexp: concourse.*\.(tgz$)|(tar\.gz$)
    endpoint: {{minio_s3_endpoint}}
    bucket: charts
    disable_ssl: true
- name: traefik-helm-chart
  type: s3
  source:
    regexp: traefik.*\.(tgz$)|(tar\.gz$)
    endpoint: {{minio_s3_endpoint}}
    bucket: charts
    disable_ssl: true
- name: cowboy-pipelines
  type: git
  source:
    uri: {{ci_tasks_git_endpoint}}
- name: bootstrap-ci-image
  type: docker-image
  source:
    repository: {{bootstrap_ci_image}}
    tag: {{ci_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-concourse-image
  type: docker-image
  source:
    repository: {{bootstrap_concourse_image}}
    tag: {{concourse_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-postgres-image
  type: docker-image
  source:
    repository: {{bootstrap_postgres_image}}
    tag: {{postgres_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-traefik-image
  type: docker-image
  source:
    repository: {{bootstrap_traefik_image}}
    tag: {{traefik_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-tiller-image
  type: docker-image
  source:
    repository: {{bootstrap_tiller_image}}
    tag: {{tiller_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-ubuntu-image
  type: docker-image
  source:
    repository: {{bootstrap_ubuntu_image}}
    tag: {{ubuntu_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-java-image
  type: docker-image
  source:
    repository: {{bootstrap_java_image}}
    tag: {{java_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-kafka-image
  type: docker-image
  source:
    repository: {{bootstrap_bitnami_kafka_image}}
    tag: {{bitnami_kafka_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-zookeeper-image
  type: docker-image
  source:
    repository: {{bootstrap_bitnami_zookeeper_image}}
    tag: {{bitnami_zookeeper_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: bootstrap-cassandra-image
  type: docker-image
  source:
    repository: {{bootstrap_bitnami_cassandra_image}}
    tag: {{bitnami_cassandra_image_tag}}
    insecure_registries: [{{bootstrap_insecure_reg}}]
- name: harbor-concourse-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_concourse_image}}
    tag: {{concourse_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-postgres-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_postgres_image}}
    tag: {{postgres_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-traefik-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_traefik_image}}
    tag: {{traefik_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-ci-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_ci_image}}
    tag: {{ci_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-tiller-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_tiller_image}}
    tag: {{tiller_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-ubuntu-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_ubuntu_image}}
    tag: {{ubuntu_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-java-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_java_image}}
    tag: {{java_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-kafka-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_bitnami_kafka_image}}
    tag: {{bitnami_kafka_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-zookeeper-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_bitnami_zookeeper_image}}
    tag: {{bitnami_zookeeper_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
- name: harbor-cassandra-image
  type: docker-image
  source:
    username: admin
    password: {{platform_password}}
    repository: {{harbor_bitnami_cassandra_image}}
    tag: {{bitnami_cassandra_image_tag}}
    insecure_registries: [{{harbor_insecure_reg}}]
jobs:
- name: deploy-pivotal-ops-manager-ova
  plan:
    - get: bootstrap-ci-image
    - get: pivotal-ops-manager
    - get: cowboy-pipelines
    - task: upload-OVA
      image: bootstrap-ci-image
      file: cowboy-pipelines/tasks/ops-man/import-pivotal-ops-manager/task.yml
      params:
        GOVC_INSECURE: true
        GOVC_URL: {{vcenter_host}}
        GOVC_USERNAME: {{vcenter_usr}}
        GOVC_PASSWORD: {{vcenter_pwd}}
        GOVC_DATACENTER: {{vcenter_datacenter}}
        GOVC_DATASTORE: {{vcenter_datastore}}
        GOVC_NETWORK: {{om_vm_network}}
        GOVC_RESOURCE_POOL: {{om_resource_pool}}
        GOVC_HOST: {{vcenter_host}}
        OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
        OM_VM_FOLDER: {{om_vm_folder}}
        OPS_MGR_SSH_PWD: {{om_ssh_password}}
        OM_NTP_SERVERS: {{ntp_servers}}
        OM_DNS_SERVERS: {{om_dns_servers}}
        OM_GATEWAY: {{om_gateway}}
        OM_NETMASK: {{om_netmask}}
        OM_IP: {{om_ip}}
        OM_VM_NETWORK: {{om_vm_network}}
        OM_VM_NAME: {{om_vm_name}}
        OPSMAN_DISK_TYPE: {{disk_type}}
        OM_VM_POWER_STATE: true
- name: config-pivotal-ops-manager-auth
  plan:
  - aggregate:
    - get: bootstrap-ci-image
      passed: [deploy-pivotal-ops-manager-ova]
      trigger: true
    - get: pivotal-ops-manager
    - get: cowboy-pipelines
  - task: config-opsman-auth
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/config-pivotal-ops-manager-auth/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
      OM_DECRYPTION_PWD: {{platform_password}}
- name: config-pivotal-ops-bosh-director
  plan:
  - aggregate:
    - get: bootstrap-ci-image
      passed: [config-pivotal-ops-manager-auth]
      trigger: true
    - get: pivotal-ops-manager
    - get: cowboy-pipelines
  - task: configure-ops-director-tile
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/config-pivotal-ops-bosh-director/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
      VCENTER_HOST: {{vcenter_host}}
      VCENTER_USR: {{vcenter_usr}}
      VCENTER_PWD: {{vcenter_pwd}}
      VCENTER_DATA_CENTER: {{vcenter_datacenter}}
      VCENTER_DISK_TYPE: {{disk_type}}
      EPHEMERAL_STORAGE_NAMES: {{ephemeral_datastore}}
      PERSISTENT_STORAGE_NAMES: {{persistent_datastore}}
      BOSH_VM_FOLDER: {{bosh_vm_folder}}
      BOSH_TEMPLATE_FOLDER: {{bosh_template_folder}}
      BOSH_DISK_PATH: {{bosh_disk_path}}
      ICMP_CHECKS_ENABLED: {{icmp_checks_enabled}}
      MANAGEMENT_NETWORK_NAME: {{management_network_name}}
      MANAGEMENT_VCENTER_NETWORK: {{management_vsphere_network}}
      MANAGEMENT_NW_CIDR: {{management_nw_cidr}}
      MANAGEMENT_EXCLUDED_RANGE: {{management_excluded_range}}
      MANAGEMENT_NW_DNS: {{management_nw_dns}}
      MANAGEMENT_NW_GATEWAY: {{management_nw_gateway}}
      MANAGEMENT_NW_AZS: {{management_nw_azs}}
      WORKLOAD_NETWORK_NAME: {{workload_network_name}}
      WORKLOAD_VCENTER_NETWORK: {{workload_vsphere_network}}
      WORKLOAD_NW_CIDR: {{workload_nw_cidr}}
      WORKLOAD_EXCLUDED_RANGE: {{workload_excluded_range}}
      WORKLOAD_NW_DNS: {{workload_nw_dns}}
      WORKLOAD_NW_GATEWAY: {{workload_nw_gateway}}
      WORKLOAD_NW_AZS: {{workload_nw_azs}}
      AZ_1: {{az_1_name}}
      AZ_1_CLUSTER_NAME: {{az_1_cluster_name}}
      AZ_1_RP_NAME: {{az_1_rp_name}}
      AZ_2: {{az_2_name}}
      AZ_2_CLUSTER_NAME: {{az_2_cluster_name}}
      AZ_2_RP_NAME: {{az_2_rp_name}}
      AZ_3: {{az_3_name}}
      AZ_3_CLUSTER_NAME: {{az_3_cluster_name}}
      AZ_3_RP_NAME: {{az_3_rp_name}}
      NTP_SERVERS: {{ntp_servers}}
      OPS_DIR_HOSTNAME: {{ops_dir_hostname}}
      ENABLE_VM_RESURRECTOR: {{enable_vm_resurrector}}
      ENABLE_POST_DEPLOY: {{enable_post_deploy}}
      MAX_THREADS: {{max_threads}}
      NSX_NETWORKING_ENABLED: {{nsx_networking_enabled}}
      NSX_ADDRESS: {{nsx_address}}
      NSX_USERNAME: {{nsx_username}}
      NSX_PASSWORD: {{nsx_password}}
      NSX_CA_CERTIFICATE: {{nsx_ca_certificate}}
- name: apply-changes-pivotal-ops-bosh-director
  plan:
  - aggregate:
    - get: bootstrap-ci-image
      passed: [config-pivotal-ops-bosh-director]
      trigger: true
    - get: pivotal-ops-manager
    - get: cowboy-pipelines
  - task: apply-changes
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/apply-changes-pivotal-ops-manager/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_USERNAME: {{platform_username}}
      OPSMAN_PASSWORD: {{platform_password}}
- name: upload-config-pivotal-container-service
  plan:
  - aggregate:
    - get: bootstrap-ci-image
      passed: [apply-changes-pivotal-ops-bosh-director]
      trigger: true
    - get: pivotal-product
      resource: pivotal-container-service
    - get: cowboy-pipelines
  - task: upload-tile
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/upload-pivotal-tile/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
      FULL_TILE_NAME: "pivotal-container-service-1.2.4-build.6.pivotal"
  - task: stage-tile
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/stage-pivotal-tile/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
  - task: config-pks-tile
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/pks/config-pivotal-container-service/task.yml
    params:
      OPSMAN_USERNAME: {{platform_username}}
      OPSMAN_PASSWORD: {{platform_password}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      IAAS: {{iaas}}
      VCENTER_HOST: {{vcenter_host}}
      VCENTER_USR: {{vcenter_usr}}
      VCENTER_PWD: {{vcenter_pwd}}
      VCENTER_DATA_CENTER: {{vcenter_datacenter}}
      NETWORK_NAME: {{management_network_name}}
      SERVICE_NETWORK_NAME: {{workload_network_name}}
      PKS_API: {{pks_api_fqdn}}
      PKS_VSPHERE_DATASTORE: {{persistent_datastore}}
      BOSH_VMS_FOLDER: {{bosh_vm_folder}}
      DEPLOYMENT_NW_AZS: {{workload_nw_azs}}
      PKS_SINGLETON_JOB_AZ: {{management_nw_azs}}
      PKS_SSL_CERT1: {{pks_ssl_cert1}}
      PKS_SSL_KEY1: {{pks_ssl_key1}}
      PKS_VRLI_ENABLED: {{pks_vrli_enabled}}
      PKS_VRLI_FQDN: {{pks_vrli_fqdn}}
- name: upload-config-harbor
  plan:
  - aggregate:
    - get: bootstrap-ci-image
      passed: [apply-changes-pivotal-ops-bosh-director]
      trigger: true
    - get: pivotal-product
      resource: harbor
    - get: cowboy-pipelines
  - task: upload-tile
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/upload-pivotal-tile/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
      FULL_TILE_NAME: "harbor-container-registry-1.6.0-build.35.pivotal"
  - task: stage-tile
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/stage-pivotal-tile/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
  - task: config-tile
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/harbor/config-pivotal-harbor/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_USERNAME: {{platform_username}}
      OPSMAN_PASSWORD: {{platform_password}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      AUTH_MODE: {{harbor_auth_mode}}
      HARBOR_SSL_CERT1: {{harbor_ssl_cert1}}
      HARBOR_SSL_KEY1: {{harbor_ssl_key1}}
      HARBOR_API: {{harbor_api}}
      HARBOR_ADMIN_PASSWORD: {{platform_password}}
      HARBOR_USE_CLAIR: {{harbor_use_clair}}
      HARBOR_USE_NOTARY: {{harbor_use_notary}}
      HARBOR_REGISTRY_STORAGE: {{harbor_registry_storage}}
      HARBOR_LDAP_AUTH_URL: {{harbor_ldap_auth_url}}
      HARBOR_LDAP_AUTH_VERIFY_CERT: {{harbor_ldap_auth_verify_cert}}
      HARBOR_LDAP_AUTH_SEARCHDN: {{harbor_ldap_auth_searchdn}}
      HARBOR_LDAP_AUTH_SEARCHPWD: {{harbor_ldap_auth_searchpwd}}
      HARBOR_LDAP_AUTH_BASEDN: {{harbor_ldap_auth_basedn}}
      HARBOR_LDAP_AUTH_UID: {{harbor_ldap_auth_uid}}
      HARBOR_LDAP_AUTH_FILTER: {{harbor_ldap_auth_filter}}
      HARBOR_LDAP_AUTH_SCOPE: {{harbor_ldap_auth_scope}}
      HARBOR_LDAP_AUTH_TIMEOUT: {{harbor_ldap_auth_timeout}}
      HARBOR_S3_REGISTRY_STORAGE_ACCESS_KEY: {{harbor_s3_registry_storage_access_key}}
      HARBOR_S3_REGISTRY_STORAGE_SECRET_KEY: {{harbor_s3_registry_storage_secret_key}}
      HARBOR_S3_REGISTRY_STORAGE_REGION: {{harbor_s3_registry_storage_region}}
      HARBOR_S3_REGISTRY_STORAGE_ENDPOINT_URL: {{harbor_s3_registry_storage_endpoint_url}}
      HARBOR_S3_REGISTRY_STORAGE_BUCKET: {{harbor_s3_registry_storage_bucket}}
      HARBOR_S3_REGISTRY_STORAGE_ROOT_DIRECTORY: {{harbor_s3_registry_storage_root_directory}}
      HARBOR_SERVER_CERT_CA_PEM: {{harbor_server_cert_ca_pem}}
      USE_CA_CERT: {{harbor_use_ca_cert}}
      NETWORK_NAME: {{management_network_name}}
      OTHER_AZS: {{management_nw_azs}}
      SINGLETON_JOBS_AZ: {{management_nw_azs}}
- name: deploy-pks-&-harbor-tiles
  plan:
  - aggregate:
    - get: bootstrap-ci-image
      passed: [upload-config-harbor,upload-config-pivotal-container-service]
      trigger: true
    - get: pivotal-stemcell
      resource: xenial-97.39
    - get: cowboy-pipelines
  - task: upload-stemcell
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/upload-pivotal-stemcell/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
      FULL_STEMCELL_NAME: "bosh-stemcell-97.39-vsphere-esxi-ubuntu-xenial-go_agent.tgz"
  - task: apply-changes
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/apply-changes-pivotal-ops-manager/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPSMAN_USERNAME: {{platform_username}}
      OPSMAN_PASSWORD: {{platform_password}}
- name: set-dns
  plan:
  - aggregate:
    - get: bootstrap-ci-image
      passed: [deploy-pks-&-harbor-tiles]
      trigger: true
    - get: cowboy-pipelines
  - task: get-pks-ip
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/determine-product-ip/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
      OPSMAN_PRODUCT_NAME: "pivotal-container-service"
  - task: check-pks-dns
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/util/check-dns/task.yml
    params:
      DNS_SERVER_IP: {{management_nw_dns}}
      DNS_HOSTNAME: {{pks_api_fqdn}}
  - task: get-harbor-ip
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/ops-man/determine-product-ip/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_CLIENT_ID: {{opsman_client_id}}
      OPSMAN_CLIENT_SECRET: {{opsman_client_secret}}
      OPS_MGR_USR: {{platform_username}}
      OPS_MGR_PWD: {{platform_password}}
      OPSMAN_PRODUCT_NAME: "harbor-container-registry"
  - task: check-harbor-dns
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/util/check-dns/task.yml
    params:
      DNS_SERVER_IP: {{management_nw_dns}}
      DNS_HOSTNAME: {{harbor_api}}
- name: sync-images
  plan:
    - aggregate:
      - get: cowboy-pipelines
      - get: bootstrap-ci-image
        passed: [set-dns]
        trigger: true
        params:
          save: true
      - get: bootstrap-concourse-image
        params:
          save: true
      - get: bootstrap-postgres-image
        params:
          save: true
      - get: bootstrap-traefik-image
        params:
          save: true
      - get: bootstrap-tiller-image
        params:
          save: true
      - get: bootstrap-ubuntu-image
        params:
          save: true
      - get: bootstrap-java-image
        params:
          save: true
      - get: bootstrap-kafka-image
        params:
          save: true
      - get: bootstrap-zookeeper-image
        params:
          save: true
      - get: bootstrap-cassandra-image
        params:
          save: true
    - aggregate:
      - task: harbor-create-concourse-project
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/create-harbor-project/task.yml
        params:
          PROJECT_NAME: concourse
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          PUBLIC: true
      - task: harbor-create-postgres-project
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/create-harbor-project/task.yml
        params:
          PROJECT_NAME: postgres
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          PUBLIC: true
      - task: harbor-create-traefik-project
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/create-harbor-project/task.yml
        params:
          PROJECT_NAME: traefik
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          PUBLIC: true
      - task: harbor-create-ci-project
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/create-harbor-project/task.yml
        params:
          PROJECT_NAME: oskoss
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          PUBLIC: true
      - task: harbor-create-tiller-project
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/create-harbor-project/task.yml
        params:
          PROJECT_NAME: kubernetes-helm
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          PUBLIC: true
      - task: harbor-create-ubuntu-project
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/create-harbor-project/task.yml
        params:
          PROJECT_NAME: ubuntu
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          PUBLIC: true
      - task: harbor-create-java-project
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/create-harbor-project/task.yml
        params:
          PROJECT_NAME: openjdk
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          PUBLIC: true
      - task: harbor-create-bitnami-project
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/create-harbor-project/task.yml
        params:
          PROJECT_NAME: bitnami
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          PUBLIC: true
    - aggregate:
      - put: harbor-concourse-image
        params:
          load: bootstrap-concourse-image
      - put: harbor-postgres-image
        params:
          load: bootstrap-postgres-image
      - put: harbor-traefik-image
        params:
          load: bootstrap-traefik-image
      - put: harbor-ci-image
        params:
          load: bootstrap-ci-image
      - put: harbor-tiller-image
        params:
          load: bootstrap-tiller-image
      - put: harbor-ubuntu-image
        params:
          load: bootstrap-ubuntu-image
      - put: harbor-java-image
        params:
          load: bootstrap-java-image
      - put: harbor-kafka-image
        params:
          load: bootstrap-kafka-image
      - put: harbor-zookeeper-image
        params:
          load: bootstrap-zookeeper-image
      - put: harbor-cassandra-image
        params:
          load: bootstrap-cassandra-image
- name: sync-postgresql-helm-chart
  plan:
      - get: chart-tar
        resource: postgresql-helm-chart
      - get: bootstrap-ci-image
        passed: [sync-images]
        trigger: true
      - task: harbor-upload-postgresql-chart
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/upload-helm-chart/task.yml
        params:
          PROJECT_NAME: postgresql
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          TAR_FILENAME: postgresql-0.13.1.tar
- name: sync-concourse-helm-chart
  plan:
      - get: cowboy-pipelines
      - get: chart-tar
        resource: concourse-helm-chart
      - get: bootstrap-ci-image
        passed: [sync-images]
        trigger: true
      - task: harbor-upload-concourse-chart
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/upload-helm-chart/task.yml
        params:
          PROJECT_NAME: concourse
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          TAR_FILENAME: concourse-3.7.1.tgz
- name: sync-traefik-helm-chart
  plan:
      - get: cowboy-pipelines
      - get: chart-tar
        resource: traefik-helm-chart
      - get: bootstrap-ci-image
        passed: [sync-images]
        trigger: true
      - task: harbor-upload-traefik-chart
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/upload-helm-chart/task.yml
        params:
          PROJECT_NAME: traefik
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          TAR_FILENAME: traefik-1.59.2.tgz
- name: sync-kafka-helm-chart
  plan:
      - get: cowboy-pipelines
      - get: chart-tar
        resource: kafka-helm-chart
      - get: bootstrap-ci-image
        passed: [sync-images]
        trigger: true
      - task: harbor-upload-kafka-chart
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/upload-helm-chart/task.yml
        params:
          PROJECT_NAME: bitnami
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          TAR_FILENAME: kafka-1.2.6.tgz
- name: sync-postgresql-zookeeper-chart
  plan:
      - get: cowboy-pipelines
      - get: chart-tar
        resource: zookeeper-helm-chart
      - get: bootstrap-ci-image
        passed: [sync-images]
        trigger: true
      - task: harbor-upload-zookeeper-chart
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/upload-helm-chart/task.yml
        params:
          PROJECT_NAME: bitnami
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          TAR_FILENAME: zookeeper-1.2.1.tgz
- name: sync-cassandra-helm-chart
  plan:
      - get: cowboy-pipelines
      - get: chart-tar
        resource: cassandra-helm-chart
      - get: bootstrap-ci-image
        passed: [sync-images]
        trigger: true
      - task: harbor-upload-cassandra-chart
        image: bootstrap-ci-image
        file: cowboy-pipelines/tasks/harbor/upload-helm-chart/task.yml
        params:
          PROJECT_NAME: bitnami
          HARBOR_FQDN: {{harbor_api}}
          HARBOR_USERNAME: admin
          HARBOR_PASSWORD: {{platform_password}}
          TAR_FILENAME: cassandra-2.1.2.tgz
- name: create-pks-admin-user
  plan:
    - aggregate:
      - get: bootstrap-ci-image
        passed: [set-dns]
        trigger: true
      - get: cowboy-pipelines
    - task: authenticate-pks
      image: bootstrap-ci-image
      file: cowboy-pipelines/tasks/pks/create-pks-admin/task.yml
      params:
        OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
        OPS_MGR_USR: {{platform_username}}
        OPS_MGR_PWD: {{platform_password}}
        PKS_CLI_USERNAME: {{platform_username}}
        PKS_CLI_USEREMAIL: "no-reply@pivotal.io"
        PKS_CLI_PASSWORD: {{platform_password}}
        PKS_UAA_FQDN: {{pks_api_fqdn}}
- name: deploy-k8s-cluster
  plan:
    - aggregate:
      - get: bootstrap-ci-image
        passed: [create-pks-admin-user]
        trigger: true
      - get: cowboy-pipelines
    - task: authenticate-pks
      image: bootstrap-ci-image
      file: cowboy-pipelines/tasks/pks/authenticate-pks/task.yml
      params:
        PKS_API_URL: {{pks_api_fqdn}}
        PKS_API_USERNAME: {{platform_username}}
        PKS_API_PASSWORD: {{platform_password}}
    - task: create-k8s-cluster
      image: bootstrap-ci-image
      file: cowboy-pipelines/tasks/pks/create-k8s-cluster/task.yml
      params:
        CLUSTER_NAME: control-cluster
        CLUSTER_PLAN: {{control-k8s-cluster-pks-plan}}
        CLUSTER_FQDN: {{control-k8s-cluster-FQDN}}
- name: bootstrap-cluster
  plan:
  - aggregate:
    - get: bootstrap-ci-image
      passed: [deploy-k8s-cluster]
    - get: cowboy-pipelines
  - task: authenticate-pks
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/pks/authenticate-pks/task.yml
    params:
      PKS_API_URL: {{pks_api_fqdn}}
      PKS_API_USERNAME: {{platform_username}}
      PKS_API_PASSWORD: {{platform_password}}
  - task: authenticate-kubernetes-cluster
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/k8s/authenticate-kubernetes/task.yml
    params:
      PKS_CLUSTER_NAME: control-cluster
  - task: setup-default-storage-class
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/k8s/create-vsphere-default-storage-class/task.yml
  - task: setup-tiller-for-helm
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/setup-tiller/task.yml
    params:
      TILLER_IMAGE: {{harbor_tiller_image}}
      TILLER_IMAGE_TAG: {{tiller_image_tag}}
  - task: install-traefik-ingress-controller
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/k8s/install-helm-chart/task.yml
    params:
      RELEASE_NAME: control-cluster-traefik
      CHART_NAME: traefik
      CHART_VALUES: {{traefik_chart_values}}
      NAMESPACE: kube-system
      HELM_REPO_URL: {{traefik_helm_repo}}
  - task: install-concourse
    image: bootstrap-ci-image
    file: cowboy-pipelines/tasks/k8s/install-helm-chart/task.yml
    params:
      RELEASE_NAME: control-cluster-concourse
      CHART_NAME: concourse
      CHART_VALUES: {{concourse_chart_values}}
      HELM_REPO_URL: {{concourse_helm_repo}}
      